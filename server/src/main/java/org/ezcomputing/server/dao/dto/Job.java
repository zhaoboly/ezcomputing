package org.ezcomputing.server.dao.dto;
/**
 * @author Bo Zhao
 *
 */
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.ezcomputing.worker.domain.JobBean;
import org.springframework.beans.BeanUtils;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerateStrategy;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedTimestamp;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

@DynamoDBTable(tableName = "job")
public class Job {

	public Job() {

	}

	@DynamoDBHashKey(attributeName = "id")
	@DynamoDBAutoGeneratedKey
	private String id;

	@DynamoDBAttribute(attributeName = "name")
	private String name;

	@DynamoDBAttribute(attributeName = "ownerId")
	private String owner ;

	@DynamoDBAttribute(attributeName = "language")
	private String language = Constants.LANGUAGE_SUPPORT.js;
	
	@DynamoDBAttribute(attributeName = "type")
	private String type = Constants.JOB_TYPE.original;
	

	@DynamoDBAttribute(attributeName = "source")
	private String source;

	@DynamoDBAttribute(attributeName = "request")
	private String request;

	@DynamoDBAttribute(attributeName = "response")
	private String response;

	@DynamoDBAttribute(attributeName = "jobLogList")
	private List<JobLog> jobLogList = new ArrayList<JobLog>();

	@DynamoDBAttribute(attributeName = "scheduler")
	private JobScheduler scheduler;
	
	@DynamoDBAttribute(attributeName = "jobStatus")
	private String status = Constants.JOB_STATUS.pending;
	
	@DynamoDBAttribute(attributeName = "vstatus")
	private String vstatus = Constants.JOB_V_STATUS.pri;
	
	@DynamoDBAttribute(attributeName = "error")
	private String error;

	@DynamoDBAttribute(attributeName = "publishedAppId")
	private String publishedAppId;
	
	@DynamoDBAttribute(attributeName = "fromAppId")
	private String fromAppId;
	
	//the date we load from app store. maybe used to check app updates
	@DynamoDBAttribute(attributeName = "fromAppDate")
	private Date fromAppDate;
	
	@DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
	private Date createDate;

	@DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
	private Date updateDate;

	

	public JobBean toJobBean() {
		JobBean jobBean = new JobBean();
		
		BeanUtils.copyProperties(this, jobBean, JobBean.class);
		
		return jobBean;
	}
	public void addJobLog(String workerName, String endTime, String duration, String status, String error) {
		JobLog log = new JobLog();
		log.setWorkerName(workerName);
		log.setEndTime(endTime);
		log.setDuration(duration);
		log.setStatus(status);
		log.setError(error);
		jobLogList.add(0,log);
		
		cleanupJobLog();
	}
	
	//we only keep 50 job log, 
	private void cleanupJobLog() {
		if(jobLogList.size()>70) {
			List<JobLog> newList = new ArrayList<JobLog>();
			for(int i=0; i<50; i++ ) {
				newList.add(jobLogList.get(i));
			}
			jobLogList = newList;
		}
		
	}
	
	public void addJobLog(List<JobLog> list) {
		jobLogList.addAll(list);
	}

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getOwner() {
		return owner;
	}

	public void setOwner(String owner) {
		this.owner = owner;
	}

	public String getSource() {
		return source;
	}

	public void setSource(String source) {
		this.source = source;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public Date getCreateDate() {
		return createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	public Date getUpdateDate() {
		return updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	
	public String getLanguage() {
		return language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	public String getResponse() {
		return response;
	}

	public void setResponse(String response) {
		this.response = response;
	}

	

	public String getRequest() {
		return request;
	}

	public void setRequest(String request) {
		this.request = request;
	}

	
	public List<JobLog> getJobLogList() {
		return jobLogList;
	}

	public void setJobLogList(List<JobLog> jobLogList) {
		this.jobLogList = jobLogList;
	}

	public JobScheduler getScheduler() {
		return scheduler;
	}

	public void setScheduler(JobScheduler scheduler) {
		this.scheduler = scheduler;
	}

	public String getError() {
		return error;
	}

	public void setError(String error) {
		this.error = error;
	}
	public String getVstatus() {
		return vstatus;
	}
	public void setVstatus(String vstatus) {
		this.vstatus = vstatus;
	}
	
	public String getPublishedAppId() {
		return publishedAppId;
	}
	public void setPublishedAppId(String publishedAppId) {
		this.publishedAppId = publishedAppId;
	}
	public String getType() {
		return type;
	}
	public void setType(String type) {
		this.type = type;
	}
	public String getFromAppId() {
		return fromAppId;
	}
	public void setFromAppId(String fromAppId) {
		this.fromAppId = fromAppId;
	}
	public Date getFromAppDate() {
		return fromAppDate;
	}
	public void setFromAppDate(Date fromAppDate) {
		this.fromAppDate = fromAppDate;
	}


}
